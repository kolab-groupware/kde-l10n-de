# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2014-04-28 02:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: index.docbook:20
#, no-c-format
msgid "The &rocs; Handbook"
msgstr ""

#. Tag: author
#: index.docbook:22
#, no-c-format
msgid ""
"<personname> <firstname>Tomaz</firstname> <surname>Canabrava</surname> "
"</personname> <email>tomaz.canabrava@gmail.com</email>"
msgstr ""

#. Tag: author
#: index.docbook:29
#, no-c-format
msgid ""
"<personname> <firstname>Andreas</firstname> <surname>Cord-Landwehr</surname> "
"</personname> <email>cordlandwehr@kde.org</email>"
msgstr ""

#. Tag: trans_comment
#: index.docbook:37
#, no-c-format
msgid "ROLES_OF_TRANSLATORS"
msgstr ""

#. Tag: holder
#: index.docbook:40
#, no-c-format
msgid "Tomaz Canabrava"
msgstr ""

#. Tag: holder
#: index.docbook:41
#, no-c-format
msgid "Andreas Cord-Landwehr"
msgstr ""

#. Tag: date
#: index.docbook:43
#, no-c-format
msgid "2013-07-03"
msgstr ""

#. Tag: releaseinfo
#: index.docbook:44
#, no-c-format
msgid "1.10.0 &kde; 4.12"
msgstr ""

#. Tag: para
#: index.docbook:49
#, no-c-format
msgid "&rocs; is a graph theory tool for &kde;."
msgstr ""

#. Tag: keyword
#: index.docbook:55
#, no-c-format
msgid "<keyword>KDE</keyword>"
msgstr ""

#. Tag: keyword
#: index.docbook:56
#, no-c-format
msgid "kdeedu"
msgstr ""

#. Tag: keyword
#: index.docbook:57
#, no-c-format
msgid "mathematics"
msgstr ""

#. Tag: keyword
#: index.docbook:58
#, no-c-format
msgid "math"
msgstr ""

#. Tag: keyword
#: index.docbook:59
#, no-c-format
msgid "graphs"
msgstr ""

#. Tag: keyword
#: index.docbook:60
#, no-c-format
msgid "node"
msgstr ""

#. Tag: keyword
#: index.docbook:61
#, no-c-format
msgid "edge"
msgstr ""

#. Tag: title
#: index.docbook:67
#, no-c-format
msgid "Introduction"
msgstr ""

#. Tag: para
#: index.docbook:68
#, no-c-format
msgid ""
"In this chapter we provide an overview of the core features and the workflow of "
"&rocs;. For the eager reader, who wants to start using &rocs; immediately, we "
"suggest to read at least <xref linkend=\"introduction-nutshell\"/> "
"and using <xref linkend=\"scripting\"/> as a reference when writing algorithms."
msgstr ""

#. Tag: title
#: index.docbook:74
#, no-c-format
msgid "Goals, Target Audience and Workflow"
msgstr ""

#. Tag: para
#: index.docbook:75
#, no-c-format
msgid ""
"&rocs; is a Graph Theory IDE for everybody interested in designing and "
"analyzing graph algorithms. This explicitly includes"
msgstr ""

#. Tag: para
#: index.docbook:77
#, no-c-format
msgid "lecturers, who want to demonstrate algorithms to their students,"
msgstr ""

#. Tag: para
#: index.docbook:78
#, no-c-format
msgid "students, who want to understand and see how their algorithm perform,"
msgstr ""

#. Tag: para
#: index.docbook:79
#, no-c-format
msgid "and everybody, who is interested in data structures and algorithms."
msgstr ""

#. Tag: para
#: index.docbook:82
#, no-c-format
msgid ""
"For all these users, &rocs; provides an easy to use data structure editor for "
"creating the data structures, a powerful scripting engine to execute "
"algorithms, and several helper tools for your simulations and experiments."
msgstr ""

#. Tag: para
#: index.docbook:85
#, no-c-format
msgid ""
"The typical workflow when using &rocs; is to start by creating a graph with the "
"visual graph editor. You can do this either by hand, this is adding data "
"elements and connect them, or by using one of the data structure generators (if "
"available for the currently selected data structure backend). Data structure "
"generators can be found at <menuchoice><guimenu>Graph Document</guimenu> "
"<guimenuitem>Tools</guimenuitem> <guimenuitem>Generate Graph</guimenuitem>"
"</menuchoice>. Further, you can assign values to the data structure elements, "
"either by hand or using <menuchoice><guimenu>Graph Document</guimenu> "
"<guimenuitem>Tools</guimenuitem> <guimenuitem>Assign Values</guimenuitem>"
"</menuchoice>. Finally, you can write your algorithm in JavaScript and execute "
"it with the just created data structure. All changes that your algorithm "
"perform at the data structure will be directly visible at the visual graph "
"editor."
msgstr ""

#. Tag: screeninfo
#: index.docbook:95
#, no-c-format
msgid "<screeninfo>A Screenshot of &rocs;.</screeninfo>"
msgstr ""

#. Tag: phrase
#: index.docbook:101
#, no-c-format
msgid "<phrase>A Screenshot of &rocs;.</phrase>"
msgstr ""

#. Tag: title
#: index.docbook:108
#, no-c-format
msgid "&rocs; in a Nutshell"
msgstr ""

#. Tag: para
#: index.docbook:109
#, no-c-format
msgid ""
"In this section we provide a compact overview of the core elements of &rocs;. "
"We explain the important notions of data structures, data structure backends, "
"and element types. Understanding of these concepts is useful to understand how "
"data structures can be created and modified in &rocs;."
msgstr ""

#. Tag: para
#: index.docbook:114
#, no-c-format
msgid ""
"In general &rocs; works with projects: when opening &rocs; an empty project is "
"created and you can replace it by loading or importing another project. Hereby, "
"a project itself consists of <emphasis>graph documents</emphasis> and <emphasis>"
"scripts</emphasis>."
msgstr ""

#. Tag: title
#: index.docbook:120
#, no-c-format
msgid "Graph Documents and Data Structure Backends"
msgstr ""

#. Tag: para
#: index.docbook:121
#, no-c-format
msgid ""
"A graph document represents the content of a whiteboard in the visual graph "
"editor. Hereby, a graph document can contain several data structures at once, "
"but only one data structure backends. Data structure backends are present for "
"several graph types (general graphs, linked lists, rooted trees) and provide "
"for their specific graph types additional functionality. That can be automatic "
"positioning of the elements, special icon sets, or an extended set of script "
"functions for use in your algorithms. (for details look at the corresponding "
"handbook section). It is possible to change the data structure backend of a "
"graph document, though information can be lost (e.g., edges of a circle in a "
"general graph won't be added to a tree, if you switch to the rooted tree "
"backend)."
msgstr ""

#. Tag: para
#: index.docbook:126
#, no-c-format
msgid ""
"Graph documents form also the base for defining pointer types and data types."
msgstr ""

#. Tag: title
#: index.docbook:132
#, no-c-format
msgid "Data Structures"
msgstr ""

#. Tag: para
#: index.docbook:133
#, no-c-format
msgid ""
"Data structures are the base of all work in &rocs;. You can add one or several "
"of them to a graph document, add data elements (nodes, datums) and pointers to "
"them, and modify them by scripts. For this, each data structure has its unique "
"name by which it can be accessed from your scripts. Due to your choice of the "
"current data structure backend it can happen that you cannot modify the data "
"structures arbitrarily (e.g., a tree should never contain a cycle). The data "
"structure backend is determined by the data structure backend associated with "
"the corresponding graph document that contains the data structure."
msgstr ""

#. Tag: title
#: index.docbook:139
#, no-c-format
msgid "Pointer Types"
msgstr ""

#. Tag: para
#: index.docbook:140
#, no-c-format
msgid ""
"By pointer types you can define different types of pointers to be used in your "
"data structures. This is, a pointer type can get an individual layout "
"(essentially a color) and it is easy to access only pointers of a specific type "
"from your scripts. Typical use cases for pointers can be to implement "
"meta-edges at your data structures that visualize relationships between data "
"elements (e.g., visualize communication interests). But also, if your scripts "
"shall identify specific kinds of edges (e.g., tree and cross edges at the depth "
"first search algorithm), pointer types can be an elegant way to implement that."
msgstr ""

#. Tag: title
#: index.docbook:148
#, no-c-format
msgid "Data Types"
msgstr ""

#. Tag: para
#: index.docbook:149
#, no-c-format
msgid ""
"In several data structure problems, a set of data elements should be parted "
"into groups of different types (e.g., clustering problems or covering "
"problems). Or it is useful for the execution of an algorithm to specify a data "
"element type to express a specific type (e.g., breath first search). For such "
"use cases you can define data types. Each data type has its own icon and data "
"types of some type can easily be accessed from your scripts."
msgstr ""

#. Tag: title
#: index.docbook:157
#, no-c-format
msgid "Dynamic Properties"
msgstr ""

#. Tag: para
#: index.docbook:158
#, no-c-format
msgid ""
"Every data element and pointer can have many properties. Some of these "
"properties are default from data structure backend. See the documentation of "
"the data structure backend for more details. To add further properties to the "
"data elements and pointers, you can add <emphasis>dynamic properties</emphasis> "
"to them. Each dynamic property is identified by its name and can contain any "
"value associated with it. The name must start with a letter (a-z or A-Z) and "
"can contain only letters, numbers and '_'. If you try to use any invalid "
"character in the property name, the property will not be changed."
msgstr ""

#. Tag: para
#: index.docbook:163
#, no-c-format
msgid ""
"To add dynamic properties, use the <guilabel>Data Element Properties</guilabel> "
"and <guilabel>Pointer Properties</guilabel> dialogs from the context menus of "
"the respective elements or the script functions as explained in <xref "
"linkend=\"scripting-data-structure\"/>."
msgstr ""

#. Tag: para
#: index.docbook:166
#, no-c-format
msgid ""
"You can also use the scripts. You just need to use the <literal>"
"add_property</literal> with the name and value of your property. After that, "
"you can use node/pointer.propertyName to set/get the values."
msgstr ""

#. Tag: para
#: index.docbook:170
#, no-c-format
msgid ""
"Here is an example of how to use dynamic properties with data structure backend "
"\"Graph\"."
msgstr ""

#. Tag: programlisting
#: index.docbook:172
#, no-c-format
msgid ""
"nodes = myGraph.list_nodes()\n"
"for (var i = 0; i &lt; nodes.length; ++i ){\n"
"    nodes[i].add_property(\"MyProperty\", 0)\n"
"}\n"
"nodes[0].MyProperty = 2\n"
"nodes[1].MyProperty = nodes[0].MyProperty + 2"
msgstr ""

#. Tag: title
#: index.docbook:178
#, no-c-format
msgid "Tutorial"
msgstr ""

#. Tag: para
#: index.docbook:179
#, no-c-format
msgid ""
"In this section we want to create an example project to explore some of the "
"most important functions of &rocs;. The goal is to create a graph and a script "
"that illustrates a simple 2-approximate algorithm for the <emphasis>"
"minimum vertex cover</emphasis> problem. The minimum vertex cover problem is "
"the problem to find a subset of graph nodes C of minimal size such that each "
"graph edge is connected to at least one node in C. This problem is known to be "
"NP-hard and we want to illustrate how to find an approximation of factor 2 by "
"finding a matching in the given graph (in the following we use the common terms "
"for graph algorithms: graph is the data structure, nodes are the data elements, "
"edges are the pointers)."
msgstr ""

#. Tag: para
#: index.docbook:185
#, no-c-format
msgid ""
"Our goal is to visualize the correspondence of the matching and the minimum "
"vertex cover. For this, we want to specify two pointer types, one to display "
"matching edges and one type to display ordinary edges, as well as two data "
"types that we use to distinguish nodes contained in C and those not contained "
"in C."
msgstr ""

#. Tag: title
#: index.docbook:191
#, no-c-format
msgid "Generate a Graph"
msgstr ""

#. Tag: para
#: index.docbook:192
#, no-c-format
msgid ""
"For the data structure backend <quote>Graph</quote>, &rocs; ships a helper tool "
"that can generate graphs. We go to <menuchoice><guimenu>Graph Document</guimenu> "
"<guisubmenu>Tools</guisubmenu> <guimenuitem>Generate Graph</guimenuitem>"
"</menuchoice>. There we generate a <guilabel>Random Graph</guilabel> "
"with 30 nodes, 90 edges, and with seed 1 (the seed is the starting seed for the "
"random graph generator; using the same seed multiple times results in same and "
"reproducible graphs). Finally, we modify the graph name at the data structure "
"panel and call the graph <literal>testgraph</literal>."
msgstr ""

#. Tag: title
#: index.docbook:200
#, no-c-format
msgid "Create Types"
msgstr ""

#. Tag: para
#: index.docbook:201
#, no-c-format
msgid ""
"We use the <guibutton>Properties</guibutton> buttons at the Document Selector "
"bar to open the properties dialog for data and pointer types of the current "
"graph document. For the data types we add a new type called \"C\", which "
"automatically gets ID <literal>1</literal>. For this type we select the server "
"picture as icon. Furthermore, we switch to the pointer type page and add a new "
"pointer type called \"matching\". This gets automatically ID <literal>"
"1</literal> and we set the color to blue."
msgstr ""

#. Tag: title
#: index.docbook:211
#, no-c-format
msgid "The Algorithm"
msgstr ""

#. Tag: para
#: index.docbook:212
#, no-c-format
msgid ""
"At last we have to implement the approximation algorithm. For this we use the "
"following implementation:"
msgstr ""

#. Tag: programlisting
#: index.docbook:215
#, no-c-format
msgid ""
"var E = testgraph.list_edges(); // set of unprocessed edges\n"
"var C = new Array();            // matching edges\n"
"while (E.length > 0) {\n"
"    var e = E[0];        // we take first edge e={u,v}\n"
"    var u = e.start();\n"
"    var v = e.end();\n"
"    e.set_type(1);        // set edge to be a matching edge\n"
"    E.shift();            // remove e (i.e., E[0]) from edge list\n"
"    C.push(u);            // add u to C\n"
"    C.push(v);            // add v to C\n"
"\n"
"    // mark u,v as nodes in C\n"
"    u.set_type(1);\n"
"    v.set_type(1);\n"
"\n"
"    // remove from E all edges incident to u or v\n"
"    var adjacent = u.adj_edges();\n"
"    for (var i=0; i &lt; adjacent.length; i++) {\n"
"        var index = E.indexOf(adjacent[i]); // find the index\n"
"        if (index!=-1) {\n"
"            E.splice(index, 1); // remove it if really found\n"
"        }\n"
"    }\n"
"    var adjacent = v.adj_edges();\n"
"    for (var i=0; i &lt; adjacent.length; i++) {\n"
"        var index = E.indexOf(adjacent[i]); // find the index\n"
"        if (index!=-1) {\n"
"            E.splice(index, 1); // remove it if really found\n"
"        }\n"
"    }\n"
"}\n"
"Console.log(\"Vertex Cover contains \" + C.length + \" nodes.\");"
msgstr ""

#. Tag: title
#: index.docbook:219
#, no-c-format
msgid "Execute the Algorithm"
msgstr ""

#. Tag: para
#: index.docbook:220
#, no-c-format
msgid ""
"Finally we want to execute the algorithm. For this we can start the execution "
"by the <guibutton>Run</guibutton> button at the script control panel."
msgstr ""

#. Tag: title
#: index.docbook:228
#, no-c-format
msgid "The &rocs; User Interface"
msgstr ""

#. Tag: title
#: index.docbook:231
#, no-c-format
msgid "General Elements of the User Interface"
msgstr ""

#. Tag: para
#: index.docbook:232
#, no-c-format
msgid ""
"The user interface is divided into several logical parts as presented at the "
"screenshot below."
msgstr ""

#. Tag: screeninfo
#: index.docbook:236
#, no-c-format
msgid "<screeninfo>&GUI; elements of the &rocs; interface.</screeninfo>"
msgstr ""

#. Tag: phrase
#: index.docbook:242
#, no-c-format
msgid "<phrase>&GUI; elements of the &rocs; interface.</phrase>"
msgstr ""

#. Tag: term
#: index.docbook:248
#, no-c-format
msgid "Document Selector"
msgstr ""

#. Tag: para
#: index.docbook:249
#, no-c-format
msgid ""
"At this top menubar you must select the current document and data structure. "
"Creating and deleting of data structures as well as access to data structure "
"properties is also possible there."
msgstr ""

#. Tag: term
#: index.docbook:254
#, no-c-format
msgid "Visual Graph Editor"
msgstr ""

#. Tag: para
#: index.docbook:255
#, no-c-format
msgid ""
"This is the whiteboard at which data structures can be created and modified. "
"Right click at the whiteboard, at data elements, or at pointers to open context "
"menus. You can use the tools from the <emphasis>Visual Graph Editor "
"Toolbar</emphasis> to modify the elements at the visual graph editor "
"whiteboard."
msgstr ""

#. Tag: term
#: index.docbook:258
#, no-c-format
msgid "Visual Graph Editor Toolbar"
msgstr ""

#. Tag: para
#: index.docbook:259
#, no-c-format
msgid ""
"This toolbar provides all tools for the visual graph editor. Use the "
"<inlinemediaobject><imageobject><imagedata "
"fileref=\"hi22-action-rocsadddata.png\" format=\"PNG\"/></imageobject> "
"</inlinemediaobject><guibutton>Add Element</guibutton> or <inlinemediaobject>"
"<imageobject><imagedata fileref=\"hi22-action-rocsaddedge.png\" format=\"PNG\"/>"
"</imageobject></inlinemediaobject><guibutton>Add Connection</guibutton> "
"buttons to create new elements or to connect elements, respectively. New data "
"elements are added to the data structure that is currently selected at the "
"<emphasis>Document Selector</emphasis> bar. Note that <guibutton>"
"Add Element</guibutton> and <guibutton>Add Connection</guibutton> "
"buttons both have menus to select the type of which the created elements shall "
"be. For details see <xref linkend=\"user-interface-toolbars\"/>."
msgstr ""

#. Tag: term
#: index.docbook:271
#, no-c-format
msgid "Side Bar"
msgstr ""

#. Tag: para
#: index.docbook:272
#, no-c-format
msgid ""
"At the right, you can find the side bar that provides several tools for your "
"workflow:"
msgstr ""

#. Tag: para
#: index.docbook:275
#, no-c-format
msgid ""
"Element Types: This widget gives you direct access to the available pointer and "
"data types."
msgstr ""

#. Tag: para
#: index.docbook:276
#, no-c-format
msgid ""
"Journal: Each project has its own journal that can be used to, &eg; note tasks, "
"results, or observations."
msgstr ""

#. Tag: para
#: index.docbook:277
#, no-c-format
msgid ""
"Handbook: To get direct access to the handbook and by this to the script "
"documentation, you can open this widget."
msgstr ""

#. Tag: para
#: index.docbook:278
#, no-c-format
msgid ""
"Scripting API: To get direct access to the script documentation, you can open "
"this widget."
msgstr ""

#. Tag: term
#: index.docbook:283
#, no-c-format
msgid "Script Editor"
msgstr ""

#. Tag: para
#: index.docbook:284
#, no-c-format
msgid ""
"In this text editor you can write algorithms as explained in detail in <xref "
"linkend=\"scripting\"/>. You can work on several script documents "
"simultaneously by using several tabs. The disk symbol at a tab appears if the "
"script contains unsaved changes."
msgstr ""

#. Tag: term
#: index.docbook:291
#, no-c-format
msgid "<term>Script Output</term>"
msgstr ""

#. Tag: para
#: index.docbook:292
#, no-c-format
msgid ""
"This text area either shows debug information or the script output of your "
"algorithm, depending on the toggled setting at the top of this widget. If the "
"script throws an error, automatically the debug output is presented."
msgstr ""

#. Tag: term
#: index.docbook:298
#, no-c-format
msgid "Controls"
msgstr ""

#. Tag: para
#: index.docbook:299
#, no-c-format
msgid ""
"Here you can find the controls for executing scripts. You can execute the "
"script that is currently open at the script editor by pressing <guiicon>"
"Run</guiicon>. While the script is executed, it is possible to stop execution "
"by pressing the <guiicon>Stop</guiicon> button. Note that the <guibutton>"
"One Step</guibutton> execution only stops at specific keywords (see <xref "
"linkend=\"scripting\"/>)."
msgstr ""

#. Tag: title
#: index.docbook:311
#, no-c-format
msgid "Toolbars"
msgstr ""

#. Tag: para
#: index.docbook:312
#, no-c-format
msgid ""
"There are different toolbars for the visual graph editor that allow you to "
"access features by only one click. Per default, the following toolbars are "
"shown:"
msgstr ""

#. Tag: para
#: index.docbook:314
#, no-c-format
msgid "<para>Main Toolbar</para>"
msgstr ""

#. Tag: para
#: index.docbook:315
#, no-c-format
msgid "<para>Alignment Toolbar</para>"
msgstr ""

#. Tag: title
#: index.docbook:319
#, no-c-format
msgid "<title>Main Toolbar</title>"
msgstr ""

#. Tag: para
#: index.docbook:320
#, no-c-format
msgid ""
"The <emphasis>Main Toolbar</emphasis> consists of the following actions. "
"Clicking at an action means that your mouse pointer applies this action at the "
"visual graph editor whiteboard:"
msgstr ""

#. Tag: para
#: index.docbook:324
#, no-c-format
msgid ""
"<guilabel>Move</guilabel>: To select elements, either click at unused space at "
"the whiteboard, keep the mouse pressed and draw a rectangle that contains some "
"data elements and/or pointers to select these elements or otherwise directly "
"click at an unselected element to select this element. If you click at a "
"selected element or a set of selected elements, respectively, by keeping the "
"mouse pressed and moving around you can move these elements. Moving selected "
"elements is also possible with the arrow keys."
msgstr ""

#. Tag: para
#: index.docbook:329
#, no-c-format
msgid ""
"<guilabel>Add Element</guilabel>: Click at an arbitrary position at the visual "
"graph editor whiteboard to create a new data element that belongs to the "
"currently selected data structure. By keeping the mouse pointer pressed at the "
"button, a menu shows up at which the data type of the new created data elements "
"can be selected (only if different data types exist)."
msgstr ""

#. Tag: para
#: index.docbook:335
#, no-c-format
msgid ""
"<guilabel>Add Connection</guilabel>: Click at one data element, keep the mouse "
"pressed and draw a line to another data element to which the pointer/edge shall "
"point. This action is only successful if the current graph allows to add this "
"edge (&eg;, in an undirected graph you are not allowed to add multiple edges "
"between two data elements). By keeping the mouse pointer pressed at the button, "
"a menu shows up at which the pointer type of the new created pointers can be "
"selected (only if different pointer types exist)."
msgstr ""

#. Tag: para
#: index.docbook:341
#, no-c-format
msgid ""
"<guilabel>Delete</guilabel>: Click at an element to delete it. If you delete a "
"node, all adjacent edges are also deleted."
msgstr ""

#. Tag: para
#: index.docbook:346
#, no-c-format
msgid ""
"<guilabel>Zoom</guilabel>: Click at the whiteboard, keep the &LMB; pressed, and "
"by this draw a rectangle. The whiteboard will be zoomed to the selected area. "
"Using the mousewheel to zoom in or out as well. A double click with the &LMB; "
"restores the original zoom."
msgstr ""

#. Tag: title
#: index.docbook:354
#, no-c-format
msgid "<title>Alignment Toolbar</title>"
msgstr ""

#. Tag: para
#: index.docbook:355
#, no-c-format
msgid ""
"You can add the optional <emphasis>Alignment Toolbar</emphasis>"
". Pressing an action at this toolbar has direct effect to the currently "
"selected nodes:"
msgstr ""

#. Tag: para
#: index.docbook:359
#, no-c-format
msgid ""
"<guilabel>Top</guilabel>: Align the data elements at the vertical position of "
"the top-most data element. This only affects the vertical positions."
msgstr ""

#. Tag: para
#: index.docbook:364
#, no-c-format
msgid ""
"<guilabel>Center</guilabel>: Align the data elements at the vertical position "
"given by the center of all selected data elements vertical positions. This only "
"affects the vertical positions."
msgstr ""

#. Tag: para
#: index.docbook:369
#, no-c-format
msgid ""
"<guilabel>Base</guilabel>: Align the data elements at the vertical position of "
"the bottom-most data element. This only affects the vertical positions."
msgstr ""

#. Tag: para
#: index.docbook:374
#, no-c-format
msgid ""
"<guilabel>Left</guilabel>: Align the data elements at the horizontal position "
"of the left-most data element. This only affects the horizontal positions."
msgstr ""

#. Tag: para
#: index.docbook:379
#, no-c-format
msgid ""
"<guilabel>Center</guilabel>: Align the data elements at the horizontal position "
"of the top-most data element. This only affects the horizontal positions."
msgstr ""

#. Tag: para
#: index.docbook:385
#, no-c-format
msgid ""
"<guilabel>Right</guilabel>: Align the data elements at the horizontal position "
"of the right-most data element. This only affects the horizontal positions."
msgstr ""

#. Tag: para
#: index.docbook:390
#, no-c-format
msgid ""
"<guilabel>Circle</guilabel>: Aligns the data elements at a circle of diameter "
"equals to the maximal distance of the data elements. The data elements are "
"positioned in the same sequence as given by view from the center of gravity of "
"these data elements."
msgstr ""

#. Tag: para
#: index.docbook:395
#, no-c-format
msgid ""
"<guilabel>Minimize Crossing Edges</guilabel>: Rearrange the selected data "
"elements to minimize the number of crossing connections (application of the "
"Fruchterman-Reingold algorithm)."
msgstr ""

#. Tag: title
#: index.docbook:403
#, no-c-format
msgid "Working with Graph Documents"
msgstr ""

#. Tag: para
#: index.docbook:404
#, no-c-format
msgid ""
"A &rocs; project contains one or multiple graph documents that can be edited "
"with the visual graph editor. Further, each document can contain an arbitrary "
"number of data structures. Here, data structures of a document all use the same "
"data structure backend. This section will explain how to switch between "
"documents and how to create new ones."
msgstr ""

#. Tag: title
#: index.docbook:412
#, no-c-format
msgid "The Document Selector Bar"
msgstr ""

#. Tag: para
#: index.docbook:413
#, no-c-format
msgid ""
"The document selector bar is used to select the current graph document and "
"further the current data structure. Using the visual graph editor tools to "
"create data structures elements will automatically add those newly created "
"elements to the current data structure. Also, this bar gives direct access to "
"delete existing or create new data structures within the current document."
msgstr ""

#. Tag: para
#: index.docbook:422
#, no-c-format
msgid ""
"<guilabel>New</guilabel>: This action creates a new data structure using an "
"automatic naming pattern given by the data structure backend. The created data "
"structure is added to the currently selected graph document."
msgstr ""

#. Tag: para
#: index.docbook:429
#, no-c-format
msgid ""
"<guilabel>Delete</guilabel>: This action deletes the data structure that is "
"currently selected in the data structure selector for the current document."
msgstr ""

#. Tag: para
#: index.docbook:435
#, no-c-format
msgid ""
"<guilabel>Properties</guilabel> for <guilabel>Graph Document</guilabel>"
": Open a dialog that gives access to the document properties as well as the "
"data and pointer types of the document."
msgstr ""

#. Tag: para
#: index.docbook:441
#, no-c-format
msgid ""
"<guilabel>Properties</guilabel> for <guilabel>Data Structure</guilabel>"
": Open a dialog that gives access to the data structure properties."
msgstr ""

#. Tag: screeninfo
#: index.docbook:448
#, no-c-format
msgid "The Main Toolbar."
msgstr ""

#. Tag: phrase
#: index.docbook:454
#, no-c-format
msgid "The Document Selector Bar."
msgstr ""

#. Tag: title
#: index.docbook:461
#, no-c-format
msgid "Create and Import Graph Documents"
msgstr ""

#. Tag: para
#: index.docbook:462
#, no-c-format
msgid ""
"To create a new graph document or to add an existing one to the project, use "
"<menuchoice><guimenu>File</guimenu> <guimenuitem>New Project</guimenuitem>"
"</menuchoice> or <menuchoice><guimenu>Graph Document</guimenu> <guimenuitem>"
"Import Graph</guimenuitem></menuchoice>. You can also import graph documents "
"from third party applications (for this, see <xref linkend=\"import-export\"/>"
")."
msgstr ""

#. Tag: title
#: index.docbook:473
#, no-c-format
msgid "Writing and Executing Algorithms in &rocs;"
msgstr ""

#. Tag: para
#: index.docbook:475
#, no-c-format
msgid ""
"&rocs; internally uses the QtScript scripting engine, which is a specific "
"JavaScript engine. This means, all algorithms that you implement must use "
"JavaScript. How JavaScript works and how to write JavaScript code is not "
"covered in this handbook, though we explain how to access data structures, data "
"elements and pointers of your data structures from the scripting engine. Since "
"you never use the basic data structure object but one that is provided by the "
"currently used data structure backend, the functionality of the data structure "
"is extended by the corresponding backend and you should have a look at the "
"specialized functionality. Especially, data structure backends use the common "
"terms from their domain (nodes and edges in graphs, leafs and roots in trees, "
"etc.)"
msgstr ""

#. Tag: para
#: index.docbook:482
#, no-c-format
msgid ""
"It is important to know that changes done by the scripting engine are directly "
"reflected at the properties at the visual graph editor whiteboard. Hence, the "
"scripts actually modify the data structures."
msgstr ""

#. Tag: title
#: index.docbook:489
#, no-c-format
msgid "Controlling the Script Execution"
msgstr ""

#. Tag: title
#: index.docbook:494
#, no-c-format
msgid "Include Files"
msgstr ""

#. Tag: para
#: index.docbook:495
#, no-c-format
msgid ""
"Your script documents can include other scripts. This can be useful to reduce "
"the size of script documents and improve readability. Using <menuchoice>"
"<guimenu>Script Document</guimenu> <guimenuitem>Possible Includes</guimenuitem>"
"</menuchoice> you get a list of script files already shipped with &rocs; that "
"could be included. You can include a script file with the following command:"
msgstr ""

#. Tag: programlisting
#: index.docbook:501
#, no-c-format
msgid ""
"include_script(string path);            // relative or absolute path to script "
"file"
msgstr ""

#. Tag: title
#: index.docbook:505
#, no-c-format
msgid "<title>Script Output</title>"
msgstr ""

#. Tag: para
#: index.docbook:506
#, no-c-format
msgid ""
"During the execution of an algorithm, debug and program output is displayed in "
"the <emphasis>Debug &amp; Script Output</emphasis>. If the scripting engine "
"detects a syntax error in your script, the error is also displayed as debug "
"message. Note that all program messages are also displayed at the debug output "
"(displayed as bold text)."
msgstr ""

#. Tag: para
#: index.docbook:511 index.docbook:522
#, no-c-format
msgid ""
"You can control the text that is displayed at the script output by the "
"following functions:"
msgstr ""

#. Tag: programlisting
#: index.docbook:514
#, no-c-format
msgid ""
"Console.log(string message);            // displays the message as script "
"output\n"
"    Console.debug(string message);          // displays the message as debug "
"output"
msgstr ""

#. Tag: title
#: index.docbook:518
#, no-c-format
msgid "Control Script Execution"
msgstr ""

#. Tag: para
#: index.docbook:519
#, no-c-format
msgid "There are different execution modes for your scripts."
msgstr ""

#. Tag: para
#: index.docbook:528
#, no-c-format
msgid "<guilabel>Run</guilabel>: Execute the script until it finishes."
msgstr ""

#. Tag: para
#: index.docbook:533
#, no-c-format
msgid ""
"<guilabel>One Step</guilabel>: Execute script until one step ends. A step ends "
"when the script calls the function <literal>interrupt()</literal>:"
msgstr ""

#. Tag: programlisting
#: index.docbook:536
#, no-c-format
msgid "interrupt();    // ends a step"
msgstr ""

#. Tag: para
#: index.docbook:540
#, no-c-format
msgid ""
"<guilabel>Debug</guilabel>: Execute script in debug mode. This opens the "
"QtScript debug dialog."
msgstr ""

#. Tag: para
#: index.docbook:545
#, no-c-format
msgid ""
"<guilabel>Stop</guilabel>: Stop script execution (only available if a script is "
"executing)."
msgstr ""

#. Tag: title
#: index.docbook:555
#, no-c-format
msgid "Scripting Engine API"
msgstr ""

#. Tag: para
#: index.docbook:556
#, no-c-format
msgid ""
"Every backend provides a special set of functions and properties for its data "
"structures and their elements. But also every backend provides the properties "
"and functions that are defined for the base data structure."
msgstr ""

#. Tag: chapter
#: index.docbook:559
#, no-c-format
msgid ""
"&apiDatastructure; &apiGraphstructure; &apiLinkedListstructure; "
"&apiRootedTreestructure; &apiConsole;"
msgstr ""

#. Tag: title
#: index.docbook:577
#, no-c-format
msgid "Credits and License"
msgstr ""

#. Tag: para
#: index.docbook:579
#, no-c-format
msgid "&rocs;"
msgstr ""

#. Tag: para
#: index.docbook:582
#, no-c-format
msgid "Program Copyright:"
msgstr ""

#. Tag: para
#: index.docbook:584
#, no-c-format
msgid "Copyright 2008 Ugo Sangiori (ugorox AT gmail.com)"
msgstr ""

#. Tag: para
#: index.docbook:585
#, no-c-format
msgid "Copyright 2008-2012 Tomaz Canabrava (tcanabrava AT kde.org)"
msgstr ""

#. Tag: para
#: index.docbook:586
#, no-c-format
msgid "Copyright 2008-2012 Wagner Reck (wagner.reck AT gmail.com)"
msgstr ""

#. Tag: para
#: index.docbook:587
#, no-c-format
msgid "Copyright 2011-2013 Andreas Cord-Landwehr (cordlandwehr AT kde.org)"
msgstr ""

#. Tag: para
#: index.docbook:590
#, no-c-format
msgid "Documentation Copyright:"
msgstr ""

#. Tag: para
#: index.docbook:592
#, no-c-format
msgid ""
"Documentation copyright 2009 &Anne-Marie.Mahfouf; &Anne-Marie.Mahfouf.mail;"
msgstr ""

#. Tag: para
#: index.docbook:593
#, no-c-format
msgid "Documentation copyright 2009 Tomaz Canabrava (tcanabrava AT kde.org)"
msgstr ""

#. Tag: para
#: index.docbook:594
#, no-c-format
msgid ""
"Documentation copyright 2011-2013 Andreas Cord-Landwehr (cordlandwehr AT "
"kde.org)"
msgstr ""

#. Tag: trans_comment
#: index.docbook:597
#, no-c-format
msgid "CREDIT_FOR_TRANSLATORS"
msgstr ""

#. Tag: chapter
#: index.docbook:597
#, no-c-format
msgid "&underFDL; &underGPL;"
msgstr ""

#. Tag: title
#: index.docbook:604
#, no-c-format
msgid "Installation"
msgstr ""

#. Tag: title
#: index.docbook:607
#, no-c-format
msgid "How to obtain &rocs;"
msgstr ""

#. Tag: sect1
#: index.docbook:607
#, no-c-format
msgid "&install.intro.documentation;"
msgstr ""

#. Tag: title
#: index.docbook:614
#, no-c-format
msgid "Compilation and installation"
msgstr ""

#. Tag: sect1
#: index.docbook:614
#, no-c-format
msgid "&install.compile.documentation;"
msgstr ""
