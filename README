In this file:

* Update language files for kolab
* Update language files
* What it is
* requirements
* language directories
* template directory


Update language files for kolab
-------------------------------

kolab only usses a distict set of kde modules.
There is a script called kolab_update_po.sh, that does all the work.

for that you need a copy of:
git clone kde:kde-dev-scripts.git branch KDE/4.14

* update L10NBASE in kolab_update_po.sh to the base dir, where is file is.
* update KDE_DEV_SCRIPTS in kolab_update_po.sh to the working dir of kde-dev-scripts.

Update language files
---------------------

The l10n support wirks via some scripts:

for each module you have to run:
for mod in bla foo bar; do
    scripts/extract-messages.sh
done

scripts/extract-messages.sh executes all available Message.sh files in the repo.

Messages.sh is a simple bash file that needs to run the extracting binaries.
A mostly complete example (from zanshin):
```
   #! /usr/bin/env bash
   #extract grantlee i18n strings (needs to copied into the repo)
   $EXTRACT_GRANTLEE_TEMPLATE_STRINGS `find . -name \*.html` >> html.cpp

   #ui files extraction
   $EXTRACTRC `find . -name \*.rc -o -name \*.ui` >> rc.cpp

   #kde i18n string extraction (not for the tests subdir)
   $XGETTEXT `find . -name \*.h -o -name \*.cpp | grep -v '/tests/'` -o $podir/zanshin.pot

   #QT tr() string extraction (-j is for append/merge)
   $XGETTEXT_QT `find . -name \*.h -o -name \*.cpp | grep -v '/tests/'` -j -o $podir/zanshin.pot

   #delete created cpp files
   rm -f rc.cpp html.cpp
```

and than one for all:
bash scripts/merge_all.sh


What it is
----------

Do you wonder what l10n stands for?  Just count the letters between the
first L and the last N in the word "localization" ...

requirements
------------

The *.po files contained in the subdirectories use a new message context
feature and kde-format flags, available in Gettext 0.17 and newer.
If your Gettext version is too old, you'll receive an error message in KBabel 
when saving a file and Catalogmanager will display a question mark on those 
files, which contain the new keyword "msgctxt". To avoid those annoying error 
messages in KBabel and Catalogmanager translators have two options:

  Option 1: Disable two checks in catalogmanager:
            - Project -> Configure -> Save ->    Check syntax of file when saving
            - Project -> Configure -> Folders -> Run msgfmt before processing a file

  Option 2: Install Gettext 0.17 or newer

language directories
--------------------

For every KDE supported language there is one directory that contains *.po
files as well as translated documentation files (*.docbook). To enjoy the
translated programs and languages, one has to install the files from the
respective directory and select Control Center -> Personalization -> Country
& Language -> Language.

As long as no locale is installed, all programs and documentation appear in
American English.

You don't need to install all locales, just select the directory you want.

To compile and install a language, for instance "de":

  ./scripts/autogen.sh de
  mkdir de-build
  cd de-build
  cmake -DCMAKE_INSTALL_PREFIX=$KDEDIR ../de
  make
  su -c "make install"

template directory
------------------

The template directory contains templates that only translators might use. Please
have a look at the KBabel program from the kdesdk package for further information.
